pipeline {
    agent any

    environment {
        // Use AWS credentials (ID that you've set for the AWS Credentials in Jenkins)
        AWS_CREDENTIALS = credentials('aws-credentials-id')  // Jenkins credentials ID for AWS credentials
        GITHUB_TOKEN = credentials('github-token')  // Jenkins credentials ID for GitHub token
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Use GitHub token to authenticate and clone the repository
                git credentialsId: 'github-token', url: 'https://github.com/omade88/devops-automation.git'
            }
        }

        stage('Terraform Init and Apply') {
            steps {
                dir('terraform') {
                    // Use AWS credentials (Access Key and Secret Key) for Terraform
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                        sh '''
                            terraform init
                            terraform apply -auto-approve
                        '''
                    }
                }
            }
        }

        stage('Ansible Provisioning') {
            steps {
                dir('ansible') {
                    // Ensure Ansible uses the correct SSH key and inventory file
                    sh '''
                        ansible-playbook -i inventory playbook.yml \
                        --private-key ~/.ssh/eks-terraform-key.pem
                    '''
                }
            }
        }
    }

    post {
        always {
            // Add a simple message or cleanup command
            echo 'Pipeline completed. Performing cleanup if necessary.'
            // Additional cleanup steps can be added here
        }
    }
}
