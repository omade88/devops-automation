pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')  // AWS Access Key from Jenkins credentials
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')  // AWS Secret Key from Jenkins credentials
        GITHUB_TOKEN = credentials('github-token')  // GitHub token from Jenkins credentials
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Use GitHub token to authenticate and clone the repository
                git credentialsId: 'github-token', url: 'https://github.com/omade88/devops-automation.git'
            }
        }

        stage('Terraform Init and Apply') {
            steps {
                dir('terraform') {
                    // Initialize Terraform and apply configuration using AWS credentials
                    sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        terraform init
                        terraform apply -auto-approve
                    '''
                }
            }
        }

        stage('Ansible Provisioning') {
            steps {
                dir('ansible') {
                    // Use the correct SSH key for Ansible provisioning
                    sh '''
                        ansible-playbook -i inventory playbook.yml \
                        --private-key ~/.ssh/eks-terraform-key.pem
                    '''
                }
            }
        }
    }

    post {
        always {
            // Tasks that should always run after pipeline execution
            echo 'Pipeline completed. Performing cleanup if necessary.'
        }
    }
}
